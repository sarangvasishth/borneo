# Stage 1: Build Stage
FROM node:18-alpine AS builder

# Set the working directory
WORKDIR /usr/src/app

# Copy package.json and package-lock.json for dependency installation
COPY package*.json ./

# Install all dependencies (including devDependencies for build tools)
RUN npm install && npm cache clean --force

# Copy the application source code
COPY . .

# Build the application (compiles TypeScript to JavaScript in `dist/`)
RUN npm run build

# Prune devDependencies to reduce image size
RUN npm prune --production

# Stage 2: Production Stage
FROM node:18-alpine

# Set the working directory
WORKDIR /usr/src/app

# Copy only necessary files from the builder stage
COPY --from=builder /usr/src/app/package*.json ./
COPY --from=builder /usr/src/app/dist ./dist
COPY --from=builder /usr/src/app/node_modules ./node_modules

# Expose the application port
EXPOSE ${APP_PORT}

# Command to start the application
CMD ["npm", "run", "start"]